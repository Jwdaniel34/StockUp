version: '3.8'

services:
    web:
        build: 
            context: ./stockup_project
            dockerfile: Dockerfile.prod
        command: gunicorn stockup_project.wsgi:application -w 2 -b :8000
        # volumes:
            # - .:/usr/src/stockup_porject
            # - static_volume:/home/app/web/staticfiles
            # - media_volume:/home/app/web/mediafiles
            # /usr/local/bin/gunicorn stockup_project.wsgi:application -w 2 -b :8000
        ports:
            - 8000:8000
        env_file:
            - ./.env.prod
        depends_on:
            - postgres-db
            - mysql-db
    
    postgres-db:
        image: postgres:latest
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        env_file:
            - ./.env.prod.db
        environment:
            - NAMEDB_POST
            - USER_POST
            - PASSWORD_POST
            - POST_ENGINE
            - POSTGRES_PASSWORD=password
    
    mysql-db:
        image: mysql:latest
        volumes:
            - mysql_data:/var/lib/mysql/data
        env_file:
            - ./.env.prod.db
        environment:
            - NAMEDB_MYSQL
            - USER_MYSQL    
            - PASSWORD_MYSQL
            - SQL_ENGINE
            - MYSQL_ROOT_PASSWORD=password

    # nginx:
    #     build: ./nginx
    #     volumes:
    #         - web
    #         - static_volume:/home/app/web/staticfiles
    #         - media_volume:/home/app/web/mediafiles
    #     ports:
    #         - "80:80"
    #     links:
    #         - web:web
    #     depends_on:
    #         - web

    redis:
        restart: always
        image: redis:latest
        expose:
            - "6379"
    
volumes: 
    postgres_data:
    mysql_data:
    static_volume:
    media_volume: